# Generated by Django 2.2.7 on 2021-03-31 02:47

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allergy',
            fields=[
                ('allergy_id', models.AutoField(primary_key=True, serialize=False)),
                ('allergy_name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'allergy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllergyGroup',
            fields=[
                ('allergy_group_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'allergy_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Food',
            fields=[
                ('food_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'food',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FoodLike',
            fields=[
                ('food_like_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'food_like',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Fridge',
            fields=[
                ('fridge_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'fridge',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('hashtag_id', models.AutoField(primary_key=True, serialize=False)),
                ('hashtag_name', models.CharField(max_length=45)),
                ('hashtag_count', models.IntegerField()),
            ],
            options={
                'db_table': 'hashtag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IngredientsBig',
            fields=[
                ('big_id', models.AutoField(primary_key=True, serialize=False)),
                ('big_name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'ingredients_big',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IngredientsMiddle',
            fields=[
                ('mid_id', models.AutoField(primary_key=True, serialize=False)),
                ('middle_name', models.CharField(max_length=45)),
            ],
            options={
                'db_table': 'ingredients_middle',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IngredientsSmall',
            fields=[
                ('small_id', models.AutoField(primary_key=True, serialize=False)),
                ('small_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'ingredients_small',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('recipe_id', models.AutoField(primary_key=True, serialize=False)),
                ('recipe_title', models.CharField(max_length=100)),
                ('recipe_created', models.DateTimeField()),
                ('recipe_image', models.TextField()),
                ('recipe_context', models.TextField()),
                ('recipe_ingredient', models.TextField()),
                ('recipe_time', models.CharField(max_length=45)),
                ('recipe_main_image', models.TextField()),
                ('recipe_count', models.IntegerField()),
            ],
            options={
                'db_table': 'recipe',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredients',
            fields=[
                ('ingredients_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'recipe_ingredients',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeLike',
            fields=[
                ('like_id', models.AutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'recipe_like',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_context', models.CharField(blank=True, max_length=1000, null=True)),
                ('review_image', models.CharField(max_length=1500)),
                ('review_created', models.DateTimeField()),
                ('review_rating', models.FloatField()),
            ],
            options={
                'db_table': 'review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Sequence',
            fields=[
                ('sequence_id', models.AutoField(primary_key=True, serialize=False)),
                ('sequence_image', models.CharField(max_length=300)),
                ('sequence_number', models.IntegerField()),
                ('sequence_context', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'sequence',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('user_id', models.CharField(max_length=45, primary_key=True, serialize=False)),
                ('user_email', models.CharField(max_length=45)),
                ('user_name', models.CharField(max_length=45)),
                ('user_password', models.CharField(max_length=45)),
                ('user_image', models.CharField(blank=True, max_length=300, null=True)),
                ('user_introduce', models.CharField(blank=True, max_length=300, null=True)),
                ('user_gid', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('video_id', models.AutoField(primary_key=True, serialize=False)),
                ('video_name', models.CharField(max_length=45)),
                ('video_url', models.CharField(max_length=300)),
            ],
            options={
                'db_table': 'video',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AllergyFood',
            fields=[
                ('allergy', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='similar.Allergy')),
            ],
            options={
                'db_table': 'allergy_food',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RecipeHashtag',
            fields=[
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='similar.Recipe')),
            ],
            options={
                'db_table': 'recipe_hashtag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserHashtag',
            fields=[
                ('hashtag', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='similar.Hashtag')),
                ('user_hashtag_count', models.IntegerField()),
            ],
            options={
                'db_table': 'user_hashtag',
                'managed': False,
            },
        ),
    ]
